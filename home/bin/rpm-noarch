#!/bin/bash
####
# Copyright (c) 2011 Nokia Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without
# limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
####
#
# Usage:
#
#    rpm-noarch ARCH ARGS...
# OR 
#    rpm-armv5tel ARGS...
#
# The architecture is derived from the name of the shell script, or by
# running the generic script and passing the architecture as the first argument.
# This allows us to create a softlink to the shell script for each possible architecture.
#
# E.g.:    ln -s rpm-noarch rpm-armv5tel
#
#export ARCH=armv5tel

BASENAME=$(basename $0)
ARCH=${BASENAME#*-}
if [ "$ARCH" = "noarch" ] ; then
    ARCH=$1
    shift
fi

export ARCH
export PP_ARCH=-${ARCH}
export SYSROOT=/usr/${ARCH}-redhat-linux-gnueabi/sys-root
export CROSS_COMPILE=arm-none-linux-gnueabi-
export PKG_CONFIG_PATH=${SYSROOT}/usr/lib/pkgconfig
export TARGET=${ARCH}-linux-gnueabi
DIDINSTALL=""
EXTRA_ARGS="--root=${SYSROOT}"

fixinstall() {
    EXTRA_ARGS="$EXTRA_ARGS --ignorearch --noscripts"
    DIDINSTALL="yes"
}

fixerase() {
    EXTRA_ARGS="$EXTRA_ARGS --noscripts"
}

fixverbose() {
    VERBOSE="yes"
}

srpm="\.src\.rpm$"
brpm="\.rpm$"

ARGS=""
RPMS=""
SRPMS=""

addarg() { 
    ARGS="$ARGS $1" 
}
addrpm() { 
    echo "Adding rpm $@ $*"
    RPMS="$RPMS $*" 
    echo $RPMS
}
addsrpm() { 
    SRPMS="$SRPMS $1" 
}

for arg in "$@" ; do
   if [[ $arg =~ ^-- ]] ; then
       case $arg in 
	   --install)  fixinstall;;
	   --upgrade*) fixinstall;;
	   --erase*)   fixerase;;
	   --verbose)  fixverbose;;
       esac
       addarg $arg
   elif [[ $arg =~ ^- ]] ; then     # Single character arguments
       for i in $(seq 2 ${#arg}) ; do
	   char=$(expr substr "$arg" $i 1)
	   case $char in
	       i) fixinstall;;
	       U) fixinstall;;
	       e) fixerase;;
	       v) fixverbose;;
	   esac
       done
       addarg $arg
   elif [[ $arg =~ $srpm ]] ; then
       addsrpm $arg
   elif [[ $arg =~ $brpm ]] ; then
       addrpm $arg
   else
       echo "What is $arg doing here?"
       addarg $arg
   fi
done

if [ $VERBOSE ] ; then
    echo "#### Calling sudo RPM with $EXTRA_ARGS $ARGS $RPMS"
    echo "#### Calling RPM with $EXTRA_ARGS $ARGS $SRPMS"
    echo "#### ARGS=$ARGS"
    echo "#### RPMS=$RPMS"
    echo "#### SRPMS=$SRPMS"
fi

if [ -z "$RPMS" ] || [ "$SRPMS" ] ; then
    if [ $VERBOSE ] ; then
	echo rpm $ARGS $EXTRA_ARGS $SRPMS
    fi
    rpm $ARGS $EXTRA_ARGS $SRPMS
fi

if [ "$RPMS" ] ; then
    if [ $VERBOSE ] ; then
	echo sudo rpm $ARGS $EXTRA_ARGS $RPMS
    fi
    sudo rpm $ARGS $EXTRA_ARGS $RPMS
fi


if [ "" != "$DIDINSTALL" ]; then
# in case anything we installed added a pkgconfig file, we need to "fix" it to be sysroot friendly
#    echo "FIXING pcs"
    if [ -d ${PKG_CONFIG_PATH} ]; then
	for i in ${PKG_CONFIG_PATH}/*.pc ; do 
	    if [ -f "$i" ]; then
		if ! grep ${SYSROOT} $i >> /dev/null ; then 
		    echo Fixing "$i"; 
		    sudo cp $i $i.orig
		    sudo sed -i -e "s:=/usr:=${SYSROOT}/usr:" $i
		    sudo sed -i -e "s:=/lib:=${SYSROOT}/lib:" $i
		    sudo sed -i -e "s:-I/usr/include:-I${SYSROOT}/usr/include:" $i
		    sudo sed -i -e "s:-L/usr/lib:-L${SYSROOT}/usr/lib:" $i;
		    sudo sed -i -e "s:=/opt/mt:=${SYSROOT}/opt/mt:" $i
		fi
	    fi
	done
    fi
fi
